{
    "DOC_COMPUTER_GET_PORTS": "Returns a `list` of Port objects for services running on the computer.",
    "DOC_COMPUTER_LOCAL_IP": "Returns a `string` with the computer or router local ip address.",
    "DOC_COMPUTER_PUBLIC_IP": "Returns the public ip of the router or computer object.",
    "DOC_COMPUTER_FILE": "Obtain a `File` object for a file on the machine. Returns a File object or `null` if the file does not exist.",
    "DOC_COMPUTER_CREATE_FOLDER": "Creates a directory name within path. Returns `1` (true) on success or `0` (false) / `null` on failure.",
    "DOC_COMPUTER_IS_NETWORK_ACTIVE": "Does the Computer have internet access?. Returns `1` (true) or `0` (false).",
    "DOC_COMPUTER_TOUCH": "Creates an empty file with the name of filename (`string`) in the chosen directory path (`string`). Returns `1` on success, or a `string` (containing an error) on failure.",
    "DOC_COMPUTER_SHOW_PROCS": "Returns a `string` listing the processes currently running on the machine.",
    "DOC_COMPUTER_NETWORK_DEVICES": "Returns a `string` with a list of network device(s) on the computer.",
    "DOC_COMPUTER_CHANGE_PASSWORD": "Changes an existing user's password. Takes a user (`string`) and password (`string`). Returns `1` on success, or error `string` on failure.",
    "DOC_COMPUTER_CREATE_USER": "Creates a new user on the computer. Requires a username (`string`) and password (`string`). Returns `1` on success, or error `string` on failure.",
    "DOC_COMPUTER_DELETE_USER": "Deletes a user, and optionally deletes their /home/user directory. Requires username (`string`) and takes an optional removeHome `int` (`1` or `0`). Returns `1` on success, or error `string` on failure.",
    "DOC_COMPUTER_CREATE_GROUP": "Creates a group (named with a chosen `string`) for the named user (`string` username of an existing user account). Returns `1` (true) on success or error `string` on failure.",
    "DOC_COMPUTER_DELETE_GROUP": "Deletes a group (named `string`) on the machine, removing it from the named user (`string` username of an existing user). Returns `1` (true) on success or error `string` on failure.",
    "DOC_COMPUTER_GROUPS": "Returns a line delimited string of all groups a given user (`string` username) belongs to.",
    "DOC_COMPUTER_CLOSE_PROGRAM": "Terminates a process. Takes a process ID (`int`). Returns `1` on success, `0` if the process cannot be found, or an error `string` on failure to terminate the process.",
    "DOC_COMPUTER_WIFI_NETWORKS": "Takes a network interface (`string` e.g. eth0). Returns a list object of WiFi networks available to the user's machine.",
    "DOC_COMPUTER_CONNECT_WIFI": "Connects to a wireless network. Takes an interface (`string` e.g. eth0), bssid (`string`), essid (`string`), and password (`string`). Returns `1` on successful connection, `null` if the network cannot be found, or an error `string` on connection failure.",
    "DOC_CRYPTO_AIRCRACK": "Cracks a router's WiFi password. Requires the path to a pcap file created by the aireplay command. Returns the target router's WiFi password (`string`) or `null` on failure (the terminal will also output an error).",
    "DOC_CRYPTO_AIRMON": "Enables/Disables WiFi monitoring. Requires an option (`string`: either \"`start`\" or \"`stop`\") and network interface (e.g. \"`eth0`\").",
    "DOC_CRYPTO_AIREPLAY": "Capture packets from a wireless interface. Requires bssid (`string`) and essid (`string`), and an optional maxAcks (`number`). If maxAcks is not provided, use `Ctrl+C` to stop the capturing and save data to a file `file.cap` in the current directory. If maxAcks is provided, the command will stop automatically once the number of ACKs received exceeds maxAcks, saving the `file.cap` as described above. Returns `null`, or a `string` containing an error message.",
    "DOC_CRYPTO_DECIPHER": "Attempts to decipher an encrypted password. Takes a username (`string`) and encrypted password (hash `string`). Returns either the deciphered password (`string`), or `null` on failure.",
    "DOC_CRYPTO_SMTP_USER_LIST": "Connects to a mail service and returns a list object of all users on the machine, along with their email address on the server (or otherwise an `email not found` string). Takes an IP address and port (`int`).",
    "DOC_FILE_CHMOD": "Modifies the file's permissions. Takes a permissions `string` (e.g. `u+wr`) and optional recursive flag (`int` 0 or 1). If the file is a folder and the recursive flag is `1`, the permissions change will apply recursively, to all the files and folders inside the target folder. Returns a `string` (empty on success, or with an error on failure).",
    "DOC_FILE_COPY": "Copies a file to a new directory path (`string`) with the provided name (`string`). Overwrites any existing file with newname. On success, returns `1` and the terminal outputs the copied file dialogue. On failure, returns either an error (`string`) such as `permission denied` or `null` (if File object not valid).",
    "DOC_FILE_MOVE": "Moves a file to the specified path, similar to `File.copy`, except that the original file is moved. On success, returns `1`. On failure, returns either an error (`string`) such as `permission denied` or `null` (if File object not valid).",
    "DOC_FILE_RENAME": "Renames a file to newname (`string`). Returns a `string` (empty on success, or with an error on failure).",
    "DOC_FILE_PATH": "Returns the full path (`string`) to the file or directory.",
    "DOC_FILE_PARENT": "Returns the File object of the file's parent directory (or `null` if the initial object is `/`).",
    "DOC_FILE_NAME": "Returns the name of the file (`string`).",
    "DOC_FILE_GET_CONTENT": "Returns the contents of the file (`string`).",
    "DOC_FILE_SET_CONTENT": "Sets a file's contents to content (`string`). Returns `1` on success, or a `string` (containing an error) on failure.",
    "DOC_FILE_IS_BINARY": "Is the file a binary file?. Returns `1` (true) or `0` (false).",
    "DOC_FILE_HAS_PERMISSION": "Does the active user have permission to read, write, or execute the file?. Takes a permission (`string`: `r`, `w`, or `x`) and returns `1` (true) or `0` (false).",
    "DOC_FILE_DELETE": "Deletes the file and returns a `string` (empty on success, or with an error on failure).",
    "DOC_FILE_GET_FOLDERS": "Returns a `list` of File objects for all folders in the target directory.",
    "DOC_FILE_GET_FILES": "Returns a `list` of File objects for all files (excluding folder) in the target directory.",
    "DOC_FILE_PERMISSIONS": "Returns a `string` with the permissions set on the file (e.g. `-rw-rw-r--`).",
    "DOC_FILE_OWNER": "Returns the username of the file's owner (`string`).",
    "DOC_FILE_SET_OWNER": "Modifies the file's ownership user. Takes the name of a user (`string`) and optional recursive flag (`int` 0 or 1). If the file is a folder and the recursive flag is `1`, the ownership change will apply recursively, to all the files and folders inside the target folder.",
    "DOC_FILE_GROUP": "Creates a group (named with a chosen `string`) for the named user (`string` username of an existing user account). Returns `1` (true) on success or error `string` on failure.",
    "DOC_FILE_SET_GROUP": "Modifies the file's ownership group. Takes the name of a group (`string`) and optional recursive flag (`int` 0 or 1). If the file is a folder and the recursive flag is `1`, the ownership change will apply recursively, to all the files and folders inside the target folder.",
    "DOC_FILE_SIZE": "Returns the size (`int`) of the file in bytes.",
    "DOC_FTPSHELL_HOST_COMPUTER": "Returns the shell's `Computer object`.",
    "DOC_FTPSHELL_START_TERMINAL": "Launches an active terminal. The colour of the terminal will change and show the IP of the connected shell.",
    "DOC_FTPSHELL_PUT": "Upload or download files to/from the local shell to/from a remote shell. Takes the path (`string`) to a file on the shell machine, path to a folder (`string`) on the remote shell machine, and the shell (`Shell`) of the machine to copy the file to. Returns `1` on success, or a `string` (containing an error) on failure.",
    "DOC_GENERAL_MAIL_LOGIN": "Login into mail. Returns MetaMail object.",
    "DOC_GENERAL_TYPEOF": "Takes a variable (`any`). Returns the type of variable (`string`).",
    "DOC_GENERAL_GET_ROUTER": "Takes an IP address (`string`) - lan or public. If no IP is provided, defaults to the user's router. Returns a `Router object` or `null` if not found.",
    "DOC_GENERAL_GET_SWITCH": "Takes an IP address (`string`) - lan or public. If no IP is provided, defaults to the user's router. Returns a `Router object` or `null` if not found.",
    "DOC_GENERAL_NSLOOKUP": "Takes a domain name (`string`). Returns `string` - either the public IP of the provided domain or `Not found`.",
    "DOC_GENERAL_PRINT": "Takes data (optional `any`) and prints it to the terminal. If no data is supplied, prints an empty line to the terminal.",
    "DOC_GENERAL_CLEAR_SCREEN": "Clears all text from the terminal that is running the script.",
    "DOC_GENERAL_ACTIVE_USER": "Returns a `string` listing the processes currently running on the machine.",
    "DOC_GENERAL_HOME_DIR": "Returns the path (`string`) to the active user's home directory (e.g. `/home/username`).",
    "DOC_GENERAL_GET_SHELL": "Returns a `Shell object` for the shell executing the script. Takes an optional username and password to return a shell for that user.",
    "DOC_GENERAL_USER_INPUT": "Requests the user's input, along with an optional message and password mask (`int` 0 or 1), and returns the input to a variable. If isPassword is provided and is `1` then the user's input will be masked in the terminal (e.g. `*******` instead of `machina`).",
    "DOC_GENERAL_INCLUDE_LIB": "Includes an external library on the executing machine, specified by its file path (`string`). Libraries contain their own methods, and operate as custom objects. Returns a `Metaxploit object` that corresponds to the provided library, or `null` on failure.",
    "DOC_GENERAL_IMPORT_CODE": "Include code from other file. Keep in mind to use an absolute path.",
    "DOC_GENERAL_EXIT": "Exits the script, optionally printing a provided message (`string`). The script will abort and no further lines of code will be processed.",
    "DOC_GENERAL_USER_MAIL_ADDRESS": "Returns the email address (`string`) of the active user, or `null` if they do not have an email address.",
    "DOC_GENERAL_USER_BANK_NUMBER": "Returns the bank account number (`int`) of the active user, or `null` if they do not have a bank account.",
    "DOC_GENERAL_WHOIS": "Takes a public IP address (`string`). Returns a `string` containing several lines of whois information or `No Info available`.",
    "DOC_GENERAL_WAIT": "Pauses the script for the indicated duration (`number`). If duration is not specified, the default value is `1` second.",
    "DOC_GENERAL_COMMAND_INFO": "Obtain usage information for a native Grey Hack command. Takes a usage `string` and returns the usage information (`string`) or \"Unknown info\".",
    "DOC_GENERAL_PROGRAM_PATH": "Returns the absolute path (`string`) to the executing script (e.g. `/bin/myprogram`).",
    "DOC_GENERAL_FORMAT_COLUMNS": "Returns `string` data  formatted into columns (such as for use in the nmap command). Rows should be separated by a new line, while columns are separated by a space. See the below example.",
    "DOC_GENERAL_CURRENT_DATE": "Returns a `string` with the current date and time on the player's clock.",
    "DOC_GENERAL_IS_LAN_IP": "Evaluates whether a string is a valid LAN IPv4 address (ranging from `192.168.0.0` to `192.168.255.255`). Takes a `string` and returns `0` (false) or `1` (true).",
    "DOC_GENERAL_IS_VALID_IP": "Evaluates whether a string is a valid `IPv4` address. Takes a `string` and returns `0` (false) or `1` (true).",
    "DOC_GENERAL_BITWISE": "Manipulate data at the bit level. Bitwise operates on one or more bit patterns or binary numerals at the level of their individual bits.",
    "DOC_GENERAL_ABS": "Returns the absolute value of num (`number`, i.e. `int` or `float`).",
    "DOC_GENERAL_ACOS": "Returns the arccosine of num in radians (`number`).",
    "DOC_GENERAL_ASIN": "Returns the arcsine of num in radians (`number`).",
    "DOC_GENERAL_ATAN": "Returns the arctangent of num in radians (`number`).",
    "DOC_GENERAL_TAN": "Returns the tangent of rad (`number` radians).",
    "DOC_GENERAL_COS": "Returns the cosine of rad (`number` radians).",
    "DOC_GENERAL_CODE": "Returns the unicode code point (`int`) of the first character of the string.",
    "DOC_GENERAL_CHAR": "Returns the unicode character (`string`) with code point `int`.",
    "DOC_GENERAL_SIN": "Returns the sine of rad (`number` radians).",
    "DOC_GENERAL_FLOOR": "Returns a `number` floored to the base integer.",
    "DOC_GENERAL_RANGE": "Returns a `list object` containing values from start through to end, in increments of inc. Takes a starting `number`, optional end (`number`) and optional inc (`number`). If inc is not defined, the increment defaults to 1 (if end &gt; start) or otherwise to -1.",
    "DOC_GENERAL_ROUND": "Returns a `number` rounded to d decimal places.",
    "DOC_GENERAL_RND": "Returns a random `float` between 0 and 1. If seed `number` is provided, this seeds the random number generator with the given value.",
    "DOC_GENERAL_SIGN": "Returns the sign of num, either `-1` (if num &lt; 0), `0` (if num == 0), or `1` if num &gt; 0.",
    "DOC_GENERAL_SQRT": "Returns the square root of num (`number`).",
    "DOC_GENERAL_STR": "Returns the `string` value of n.",
    "DOC_GENERAL_CEIL": "Returns a `number` raised to the next or equal integer.",
    "DOC_GENERAL_PI": "Returns `3.14159265358979` (`float`).",
    "DOC_GENERAL_SLICE": "Takes a list, start (`int` index) and optional end (`int` index). Returns a separate list containing the elements in `list` from index `start` to index `end`.",
    "DOC_GENERAL_MD5": "Returns the md5 hash (`string`) of the provided `string`.",
    "DOC_GENERAL_HASH": "Returns numeric hash.",
    "DOC_GENERAL_TIME": "Returns the `number` of seconds since the program execution began.",
    "DOC_LIST_REMOVE": "Removes an item from the list with the provided index (`int`).",
    "DOC_LIST_PUSH": "Pushes a new value (`any`) onto the end of the list. Returns the updated `list` (and updates the list in its place).",
    "DOC_LIST_POP": "Returns the last element of the list, and removes that element from the list.",
    "DOC_LIST_PULL": "Returns the first element of the list, and removes that element from the list.",
    "DOC_LIST_SHUFFLE": "Randomly rearranges the elements in the list. Returns `null`.",
    "DOC_LIST_REVERSE": "Reverses the list, rearranging the elements in reverse order.",
    "DOC_LIST_SUM": "Returns the total (`int`) of all numeric values in the list. This applies to `numbers` only and excludes strings, lists and maps within the list.",
    "DOC_LIST_HASINDEX": "Does index (`int`) exist in the list?. Returns `1` (true) if the list contains the index or `0` (false) if not.",
    "DOC_LIST_INDEXOF": "Get the index of the first element matching val (`any`). Optionally searches after begin (`int` index). Returns index (`int`) of the first matching element or `null` if there are no matches.",
    "DOC_LIST_SORT": "Sorts the list alphanumerically. Where the list contains `map objects`, sorts by value of an optional given key (`any`). Returns the updated `list` (and updates the list in its place).",
    "DOC_LIST_JOIN": "Takes a separator (`string`). Concatenates all items within the list (any non-string items will be converted to a string) and returns them in a single `string` (separated by the separator).",
    "DOC_LIST_INDEXES": "Returns a list object containing the list's indexes.",
    "DOC_LIST_LEN": "Returns the length of the list (`int`).",
    "DOC_LIST_VALUES": "Returns a list containing all the values within the list.",
    "DOC_MAP_REMOVE": "Remove an item from a map, by its key (`string` or `int`). Returns `1` (true) or `0` (false).",
    "DOC_MAP_PUSH": "Pushes a new key (`string` or `number`) onto the end of map, with value of `1`. Returns the updated `map` object.",
    "DOC_MAP_POP": "Returns the key (`string` or `int`) of the first element in the map, and removes that element from the map.",
    "DOC_MAP_SHUFFLE": "Randomly remaps values in a map, leaving the keys in their original order. Returns `null`.",
    "DOC_MAP_SUM": "Returns the total (`int`) of all numeric values in the map. This applies to `numbers` only and excludes strings, lists and maps within the map.",
    "DOC_MAP_HASINDEX": "Does map.key exist? The key may be a string or integer. Returns `1` (true) or `0` (false).",
    "DOC_MAP_INDEXOF": "Get the index (in maps, this will be the key) of a value. Optionally searches after begin (`any` key). Returns key (`string` or `int`) or `null` (key/value not found).",
    "DOC_MAP_INDEXES": "Returns a `list object` containing all the map keys.",
    "DOC_MAP_LEN": "Returns the length of the map (`int`).",
    "DOC_MAP_VALUES": "Returns a `list` containing all the values within the map.",
    "DOC_METALIB_OVERFLOW": "Performs a buffer overflow attack on the library at the specified memory address (`string`) with the specified vulnerable value. Additional data may need to be provided (via the optional extra parameter) for the exploit to work (e.g. if the exploit changes a user's password).",
    "DOC_METALIB_VERSION": "Returns the version number (`string`) of the library.",
    "DOC_METALIB_LIB_NAME": "Returns the file name of the library (`string`).",
    "DOC_METAMAIL_FETCH": "Fetch list of mails.",
    "DOC_METAMAIL_READ": "Returns content of an email.",
    "DOC_METAMAIL_SEND": "Send email to address.",
    "DOC_METAXPLOIT_LOAD": "Loads a library (`string` path) in memory and returns a MetaLib object. Returns either the MetaLib object, or `null` on failure.",
    "DOC_METAXPLOIT_NET_USE": "Connects to an IP address and establishes a NetSession, which grants remote access to the target's libraries; either the service library running on the optional port (`int`), or the router libraries if no port has been specified. Returns a `NetSession` object, or `null` on failure.",
    "DOC_METAXPLOIT_RSHELL_CLIENT": "Takes an optional port (`number`) and process name (`string`). Launches a process on the victim's machine, which silently tries to continuously connect in the background to the specified address and port.",
    "DOC_METAXPLOIT_RSHELL_SERVER": "Returns a `list` of `shell` objects that have been reverse shell connected to this machine.",
    "DOC_METAXPLOIT_SCAN": "Scans a MetaLib for vulnerable memory addresses and returns them in a list. Returns either the memory addresses (`list`), or `null` on failure.",
    "DOC_METAXPLOIT_SCAN_ADDRESS": "Scans a specific memory address and returns information about all its vulnerabilities. Returns either the information about the memory vulnerabilities (`string`), or `null` on failure.",
    "DOC_METAXPLOIT_SNIFFER": "Takes an optional argument to save the source (`boolean`). The terminal listens to the network packets of any connection that passes through this device. \nWhen any connection information is captured, it prints a string with the obtained data. \nIt can save the source code of the encode script if saveEncSource is `true`. Returns `null` if the listener could not be started.",
    "DOC_NETSESSION_DUMP_LIB": "Returns the MetaLib object of the library behind the service to which the NetSession belongs.",
    "DOC_PORT_PORT_NUMBER": "Returns the port number (`int`).",
    "DOC_PORT_IS_CLOSED": "Is the port closed?. Returns `1` (true) or `0` (false).",
    "DOC_PORT_GET_LAN_IP": "Returns the LAN IP Address for which the port forwarding record is configured (`string`).",
    "DOC_ROUTER_DEVICE_PORTS": "Takes a LAN IP address (`string`). Returns a `list` of Port objects for ports used on the corresponding machine.",
    "DOC_ROUTER_DEVICES_LAN_IP": "Returns a `list` of IP addresses for machines connected to the router.",
    "DOC_ROUTER_BSSID_NAME": "Returns the mac address (bssid `string`) of the router.",
    "DOC_ROUTER_ESSID_NAME": "Returns the name (essid `string`) of the router.",
    "DOC_ROUTER_LOCAL_IP": "Returns the LAN IP address (`string`) of the router.",
    "DOC_ROUTER_PUBLIC_IP": "Returns the public IP address (`string`) of the router.",
    "DOC_ROUTER_USED_PORTS": "Returns a `list` of Port objects - all ports configured for forwarding on the router.",
    "DOC_ROUTER_PING_PORT": "Takes an external port number (`int`). Returns the Port object for the specified port if forwarding is configured for it; otherwise returns `null`.",
    "DOC_ROUTER_PORT_INFO": "Takes a Port object. Returns service information for that port (`string`).",
    "DOC_SHELL_HOST_COMPUTER": "Returns the shell's `Computer object`.",
    "DOC_SHELL_START_TERMINAL": "Launches an active terminal. The colour of the terminal will change and show the IP of the connected shell.",
    "DOC_SHELL_BUILD": "Compiles an executable binary from a source file. Requires a path to a source file (`string`) and a directory path (`string`) to where the binary will be saved. The binary will be created with the same name as the source file, without a file extension. Returns a `string` (empty on success, or with an error on failure).",
    "DOC_SHELL_CONNECT_SERVICE": "Connects to a remote service (i.e. ssh/ftp) to obtain a remote shell. Requires an IP address (`string`), port (`int`), username (`string`), password (`string`), and takes an optional service (`string`). Returns a `Shell` object or `null` on failure.",
    "DOC_SHELL_LAUNCH": "Executes a program (`string` path to program) with optional parameters (`string`). Returns `null` on success, or `0` on failure.",
    "DOC_SHELL_SCP": "Upload or download files to/from the local shell to/from a remote shell. Takes the path (`string`) to a file on the shell machine, path to a folder (`string`) on the remote shell machine, and the shell (`Shell`) of the machine to copy the file to. Returns `1` on success, or a `string` (containing an error) on failure.",
    "DOC_STRING_REMOVE": "Remove the first occurrence of a substring from a string. Returns the string without the first occurrence of substr (`string`).",
    "DOC_STRING_HASINDEX": "Does the index (`int`) exist?. Returns `1` (true) or `0` (false).",
    "DOC_STRING_INDEXOF": "Get the index of the first substring (`string`) within string. Optionally searches after begin (`int` index). Returns index (`int`) or `null` (substring not found).",
    "DOC_STRING_LASTINDEXOF": "Get the index of the last substring (`substr`) within string. Takes a `string`. Returns index (`int`) or `null` (substring not found).",
    "DOC_STRING_SPLIT": "Takes a separator (`string`). Returns a `list object` of substrings (or `null` on error).",
    "DOC_STRING_REPLACE": "Takes two `string` values. Returns the string with any instances of substring old replaced with new.",
    "DOC_STRING_TRIM": "Returns the string stripped of any spacing at the beginning or end.",
    "DOC_STRING_INDEXES": "Returns a `list object` containing indexes of all characters in the string.",
    "DOC_STRING_CODE": "Returns the unicode code point (`int`) of the first character of the string.",
    "DOC_STRING_LEN": "Returns length of string (`int`).",
    "DOC_STRING_LOWER": "Returns str in lowercase (`string`).",
    "DOC_STRING_UPPER": "Returns str in uppercase (`string`).",
    "DOC_STRING_VAL": "Converts str to a number. Returns `number` if string represents a valid number, `0` if not.",
    "DOC_STRING_VALUES": "Returns a `list object` consisting of all the individual characters in str.",
    "DOC_STRING_TO_INT": "Converts str to an integer. Returns `int` if string represents a valid integer, or otherwise returns `string` str."
}