{
    "remove": {
        "arguments": [{
            "label": "key",
            "type": "string"
        }],
        "example": [
            "map.remove(0)",
            "map.remove(\"two\")",
            "print(map) // {\"1\": \"one\", \"more\": [3, 4, 5]}",
            "",
            "print(map.remove(\"more\")) // 1 (success)",
            "print(map.remove(\"nope\")) // 0 (fail, as this key does not exist)",
            "",
            "map.remove(map.indexOf([3,4,5])) //remove an item from map by its value",
            "print(map) // {\"1\": \"one\"}"
        ],
        "returns": ["null"]
    },
    "push": {
        "arguments": [{
            "label": "key",
            "type": "string"
        }],
        "example": [
            "map.push(\"j\") //the map object is updated",
            "print(map) //print the updated map",
            "// {0: \"zero\", \"1\": \"one\", \"two\": 2, \"more\": [3, 4, 5], \"j\": 1}",
            "",
            "print(map.push(\"k\")) // push also returns the map object",
            "// {0: \"zero\", \"1\": \"one\", \"two\": 2, \"more\": [3, 4, 5], \"j\": 1, \"k\": 1}",
            "",
            "map[\"l\"] = 12; //alternative to push, allowing us to declare the value",
            "map[6] = \"six\";",
            "// {0: \"zero\", \"1\": \"one\", \"two\": 2, \"more\": [3, 4, 5], \"j\": 1, \"k\": 1, \"l\": 12, 6: \"six\"}"
        ],
        "returns": ["map:any"]
    },
    "pop": {
        "example": [
            "map.pop // 0",
            "desserts = {\"peach\": \"cobbler\", \"apple\": \"pie\"}",
            "desserts.pop // \"peach\"",
            "print(desserts) // {\"apple\": \"pie\"}"
        ],
        "returns": ["string"]
    },
    "shuffle": {
        "example": [
            "map.shuffle",
            "print(map) // {0: 2, \"1\": \"zero\", \"two\": [3, 4, 5], \"more\": \"one\"}",
            "",
            "map.shuffle",
            "print(map) // {0: [3, 4, 5], \"1\": 2, \"two\": \"zero\", \"more\": \"one\"}"
        ],
        "returns": ["null"]
    },
    "sum": {
        "example": [
            "map.sum // 2 (2 is the only sole integer value in our example map)"
        ],
        "returns": ["number"]
    },
    "hasIndex": {
        "arguments": [{
            "label": "key",
            "type": "string"
        }],
        "example": [
            "map.hasIndex(0) // 1",
            "map.hasIndex(1) // 0",
            "map.hasIndex(\"1\") // 1",
            "map.hasIndex(\"two\") // 1",
            "map.hasIndex(\"five\") // 0"
        ],
        "returns": ["boolean"]
    },
    "indexOf": {
        "arguments": [{
            "label": "value",
            "type": "any"
        }],
        "example": [
            "map.indexOf(\"zero\") // 0",
            "map.indexOf(\"one\") // \"1\"",
            "map.indexOf(2) // \"two\"",
            "map.indexOf([3,4,5]) // \"more\"",
            "map.indexOf(\"five\") // null",
            "map.indexOf(\"zero\", 0) // null",
            "",
            "map[99] = 2 // {0: \"zero\", \"1\": \"one\", \"two\": 2, \"more\": [3, 4, 5], 99: 2}",
            "map.indexOf(2, \"two\") // 99"
        ],
        "returns": ["string"]
    },
    "indexes": {
        "example": [
            "map.indexes // [0, \"1\", \"two\", \"more\"]",
            "print(map.indexes[2]) //error: using a list in this way requires a reference",
            "list = map.indexes //instantiates the list to this variable",
            "print(list[2]) //prints the third key: \"two\""
        ],
        "returns": ["list:string"]
    },
    "len": {
        "example": [
            "map.len // 4"
        ],
        "returns": ["number"]
    },
    "values": {
        "example": [
            "map.values // [\"zero\", \"one\", 2, [3, 4, 5]]"
        ],
        "returns": ["list:any"]
    }
}