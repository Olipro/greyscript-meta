{
    "DOC_COMPUTER_GET_PORTS": "Returns an array of active ports on the computer.",
    "DOC_COMPUTER_LOCAL_IP": "Returns a `string` with the computer or router local ip address.",
    "DOC_COMPUTER_PUBLIC_IP": "Returns the public ip of the router or computer object.",
    "DOC_COMPUTER_FILE": "Returns the file located in the given path, relative or absolute. The file returned can be a folder. If the file does not exist, it is returned null.",
    "DOC_COMPUTER_CREATE_FOLDER": "Create a folder in the specified path.",
    "DOC_COMPUTER_IS_NETWORK_ACTIVE": "Returns `true` if the computer has internet access, `false` otherwise.",
    "DOC_COMPUTER_TOUCH": "Create an empty text file. Returns `true` if the file has been created, `false` otherwise.",
    "DOC_COMPUTER_SHOW_PROCS": "Returns a `string` with the list of active processes on the machine.",
    "DOC_COMPUTER_NETWORK_DEVICES": "Returns a string with the list of network devices available on the computer.",
    "DOC_COMPUTER_CHANGE_PASSWORD": "Change the password of an existing user on the machine, for a new one. It is necessary to be root to be able to execute the method. Returns `true` on success, `false` otherwise.",
    "DOC_COMPUTER_CREATE_USER": "Create a user on the machine, with the specified name and password. It is necessary to be root to be able to execute the method. Returns `true` on success, otherwise it returns an error `string`.",
    "DOC_COMPUTER_DELETE_USER": "It deletes the indicated user from the computer, also deleting its home folder optionally.  By default, if the optional parameter is not passed, the home folder will not be deleted. It is necessary to be root to be able to execute the method. Returns `true` on success, `false` otherwise.",
    "DOC_COMPUTER_CREATE_GROUP": "Create a new group associated with an existing user on the machine. It is necessary to be root to be able to execute the method.",
    "DOC_COMPUTER_DELETE_GROUP": "Delete the indicated user group. It is necessary to be root in order to execute this method.",
    "DOC_COMPUTER_GROUPS": "Returns a `string` with the list of groups created in the indicated user.",
    "DOC_COMPUTER_CLOSE_PROGRAM": "Close the program associated with the PID. To show the list of the running programs along with their PIDs use the `ps` command.",
    "DOC_COMPUTER_WIFI_NETWORKS": "Returns a list of the Wi-Fi networks that are available.",
    "DOC_COMPUTER_CONNECT_WIFI": "Connect to the indicated Wifi network. Returns true if the connection was successful.",
    "DOC_CRYPTO_AIRCRACK": "Returns a `string` with the password generated from the file created by aireplay.",
    "DOC_CRYPTO_AIRMON": "Enables or disables the monitor mode of a network device. The option parameter can only be \"start\" or \"stop\".",
    "DOC_CRYPTO_AIREPLAY": "Used to inject frames on wireless `int`erfaces.  Once the command with `Control+C` is stopped, it will save the captured information in a text file called `file.cap` in the path where the terminal is currently located.  Alternatively, a maximum of captured `acks` can be specified for the command to stop automatically, saving the `file.cap` file as described above. In the event that there is an error, a `string` will be returned with the message indicating the problem.",
    "DOC_CRYPTO_DECIPHER": "Start the process of decrypting the password.",
    "DOC_CRYPTO_SMTP_USER_LIST": "`SMTP` services are mail services. When using this method with the IP of a mail server, due to a vulnerability in the service, it returns a `list` of the existing users on the computer where the `SMTP` service is working.  If these users also have an email account registered on the `SMTP` server, it will be indicated in the `list`.",
    "DOC_FILE_CHMOD": "Modifies the file's permissions  Takes a permissions `string` (e.g. u+wr) and optional recursive flag (`int` 0 or 1)  If the file is a folder and the recursive flag is 1, the permissions change will apply recursively, to all the files and folders inside the folder.",
    "DOC_FILE_COPY": "Copy the file to the specified path.",
    "DOC_FILE_MOVE": "Move the file to the specified path.",
    "DOC_FILE_RENAME": "Rename the file with the name provided.",
    "DOC_FILE_PATH": "Returns a `string` with the path of the file.",
    "DOC_FILE_PARENT": "Returns the folder that contains this file.",
    "DOC_FILE_NAME": "Returns a `string` with the name of the file.",
    "DOC_FILE_GET_CONTENT": "Returns a `string` with the contents of the text file.",
    "DOC_FILE_SET_CONTENT": "Save the text in the file. The content will be overwritten if there is already text saved in the file.",
    "DOC_FILE_IS_BINARY": "Returns `true` if the file is binary, `false` otherwise.",
    "DOC_FILE_HAS_PERMISSION": "Returns true if the user who launches the script has the necessary permissions. The type_perm parameter is used for reading (\"r\"), writing (\"w\") and execution (\"x\").",
    "DOC_FILE_DELETE": "Delete the file.",
    "DOC_FILE_GET_FOLDERS": "Returns an array of the folders contained in this object. This function is only available if this object is a folder, so it is advisable to first use the `is_folder` function before calling this method.",
    "DOC_FILE_GET_FILES": "Returns an array of files (excluded folders) contained in this object. This function is only available if this object is a folder, so it is advisable to first use the is_folder function before calling this method.",
    "DOC_FILE_PERMISSIONS": "Returns a `string` with the current file permissions.",
    "DOC_FILE_OWNER": "Returns a `string` with the name of the file owner.",
    "DOC_FILE_SET_OWNER": "Apply a owner to this file. By default, the owner does not apply recursively. To apply the owner recursively, the optional parameter must be 1.",
    "DOC_FILE_GROUP": "Returns a `string` with the name of the group to which this file belongs.",
    "DOC_FILE_SET_GROUP": "Apply a group to this file. By default, the group does not apply recursively. To apply the group recursively, the optional parameter must be 1.",
    "DOC_FILE_SIZE": "Returns a `string` with the size of the file in bytes.",
    "DOC_FTPSHELL_HOST_COMPUTER": "Returns the shell's `Computer object`.",
    "DOC_FTPSHELL_START_TERMINAL": "Launches an active terminal. The colour of the terminal will change and show the IP of the connected shell.",
    "DOC_FTPSHELL_PUT": "Upload or download files to/from the local shell to/from a remote shell. Takes the path (`string`) to a file on the shell machine, path to a folder (`string`) on the remote shell machine, and the shell (`Shell`) of the machine to copy the file to. Returns `1` on success, or a `string` (containing an error) on failure.",
    "DOC_GENERAL_MAIL_LOGIN": "Access the email account and returns a `MetaMail` type object if the login has been correct. In case of error, it returns a `string`.",
    "DOC_GENERAL_TYPEOF": "Returns a string with the type of the object passed as a parameter.",
    "DOC_GENERAL_GET_ROUTER": "Returns the router whose public IP matches, otherwise returns null. If the ip_address parameter is not specified, returns the router to which the computer executing this command is connected.",
    "DOC_GENERAL_GET_SWITCH": "Returns the switch on the local network whose IP matches, otherwise it returns null.",
    "DOC_GENERAL_NSLOOKUP": "Returns the IP address that is behind the web address that has been provided.",
    "DOC_GENERAL_PRINT": "Print on the Terminal the message.",
    "DOC_GENERAL_CLEAR_SCREEN": "Delete any text from the terminal.",
    "DOC_GENERAL_ACTIVE_USER": "Returns a `string` with the name of the user who is executing the script.",
    "DOC_GENERAL_HOME_DIR": "Returns a `string` with home folder path of the user who is executing the script.",
    "DOC_GENERAL_GET_SHELL": "Returns the shell that is executing the script if it is called without parameters.  Passing a username and password, it returns a shell with those credentials if are correct.",
    "DOC_GENERAL_USER_INPUT": "It puts the program on hold to receive the user input, which will be processed as a `string`. If the password mode is activated, the input text will be hidden with asterisks. If the anyKey argument is `true`, the entered character will be captured without pressing enter.",
    "DOC_GENERAL_INCLUDE_LIB": "Includes an external library to be used in scripting. If the library has been included correctly, it will return an object of corresponding type with the library, `null` otherwise.",
    "DOC_GENERAL_IMPORT_CODE": "It imports the contents of the text file indicated on the path parameter. This method is useful for all the code of a program to be distributed between several different files and also to avoid the limit of characters allowed by text file.",
    "DOC_GENERAL_EXIT": "Stops the execution of the script at the time this method is executed. Optionally you can pass a `string` as a message that will be printed in the terminal when the program ends.",
    "DOC_GENERAL_USER_MAIL_ADDRESS": "Returns a `string` with the user's email address that is executing this script.",
    "DOC_GENERAL_USER_BANK_NUMBER": "Returns a `string` with the bank account number of the user who is executing this script.",
    "DOC_GENERAL_WHOIS": "Shows the administrator information behind the IP provided.",
    "DOC_GENERAL_WAIT": "Pauses the script for the indicated time. If duration is not specified, the default value is 1 second.",
    "DOC_GENERAL_COMMAND_INFO": "Returns the information of common commands of the Operating System, such as mkdir, whois, etc.",
    "DOC_GENERAL_PROGRAM_PATH": "Returns a `string` with the path of the program that is running at this time.",
    "DOC_GENERAL_FORMAT_COLUMNS": "Format the text provided so that it is ordered by columns.",
    "DOC_GENERAL_CURRENT_DATE": "Returns the time and date.",
    "DOC_GENERAL_IS_LAN_IP": "Returns `true` if the provided address is local, `false` otherwise. If the provided IP is not valid, it also returns `false`.",
    "DOC_GENERAL_IS_VALID_IP": "Returns `true` if the provided address is valid, `false` otherwise.",
    "DOC_GENERAL_BITWISE": "`Bitwise` operators are used for manipulating data at the bit level. `Bitwise` operates on one or more bit patterns or binary numerals at the level of their individual bits.  They are used in numerical computations to make the calculation process faster.  The operator argument accepts the following operators: &, |, ^, `>, >>>.",
    "DOC_GENERAL_ABS": "Returns the absolute value of num (`number`, i.e. `int` or `float`).",
    "DOC_GENERAL_ACOS": "Returns the arccosine of num in radians (`number`).",
    "DOC_GENERAL_ASIN": "Returns the arcsine of num in radians (`number`).",
    "DOC_GENERAL_ATAN": "Returns the arctangent of num in radians (`number`).",
    "DOC_GENERAL_TAN": "Returns the tangent of rad (`number` radians).",
    "DOC_GENERAL_COS": "Returns the cosine of rad (`number` radians).",
    "DOC_GENERAL_CODE": "Returns the unicode code point (`int`) of the first character of the string.",
    "DOC_GENERAL_CHAR": "Returns the unicode character (`string`) with code point `int`.",
    "DOC_GENERAL_SIN": "Returns the sine of rad (`number` radians).",
    "DOC_GENERAL_FLOOR": "Returns a `number` floored to the base integer.",
    "DOC_GENERAL_RANGE": "Returns a `list object` containing values from start through to end, in increments of inc. Takes a starting `number`, optional end (`number`) and optional inc (`number`). If inc is not defined, the increment defaults to 1 (if end &gt; start) or otherwise to -1.",
    "DOC_GENERAL_ROUND": "Returns a `number` rounded to d decimal places.",
    "DOC_GENERAL_RND": "Returns a random `float` between 0 and 1. If seed `number` is provided, this seeds the random number generator with the given value.",
    "DOC_GENERAL_SIGN": "Returns the sign of num, either `-1` (if num &lt; 0), `0` (if num == 0), or `1` if num &gt; 0.",
    "DOC_GENERAL_SQRT": "Returns the square root of num (`number`).",
    "DOC_GENERAL_STR": "Returns the `string` value of n.",
    "DOC_GENERAL_CEIL": "Returns a `number` raised to the next or equal integer.",
    "DOC_GENERAL_PI": "Returns `3.14159265358979` (`float`).",
    "DOC_GENERAL_SLICE": "Takes a list, start (`int` index) and optional end (`int` index). Returns a separate list containing the elements in `list` from index `start` to index `end`.",
    "DOC_GENERAL_MD5": "Returns the md5 hash (`string`) of the provided `string`.",
    "DOC_GENERAL_HASH": "Returns numeric hash.",
    "DOC_GENERAL_TIME": "Returns the `number` of seconds since the program execution began.",
    "DOC_LIST_REMOVE": "Removes an item from the list with the provided index (`int`).",
    "DOC_LIST_PUSH": "Pushes a new value (`any`) onto the end of the list. Returns the updated `list` (and updates the list in its place).",
    "DOC_LIST_POP": "Returns the last element of the list, and removes that element from the list.",
    "DOC_LIST_PULL": "Returns the first element of the list, and removes that element from the list.",
    "DOC_LIST_SHUFFLE": "Randomly rearranges the elements in the list. Returns `null`.",
    "DOC_LIST_REVERSE": "Reverses the list, rearranging the elements in reverse order.",
    "DOC_LIST_SUM": "Returns the total (`int`) of all numeric values in the list. This applies to `numbers` only and excludes strings, lists and maps within the list.",
    "DOC_LIST_HASINDEX": "Does index (`int`) exist in the list?. Returns `1` (true) if the list contains the index or `0` (false) if not.",
    "DOC_LIST_INDEXOF": "Get the index of the first element matching val (`any`). Optionally searches after begin (`int` index). Returns index (`int`) of the first matching element or `null` if there are no matches.",
    "DOC_LIST_SORT": "Sorts the list alphanumerically. Where the list contains `map objects`, sorts by value of an optional given key (`any`). Returns the updated `list` (and updates the list in its place).",
    "DOC_LIST_JOIN": "Takes a separator (`string`). Concatenates all items within the list (any non-string items will be converted to a string) and returns them in a single `string` (separated by the separator).",
    "DOC_LIST_INDEXES": "Returns a list object containing the list's indexes.",
    "DOC_LIST_LEN": "Returns the length of the list (`int`).",
    "DOC_LIST_VALUES": "Returns a list containing all the values within the list.",
    "DOC_MAP_REMOVE": "Remove an item from a map, by its key (`string` or `int`). Returns `1` (true) or `0` (false).",
    "DOC_MAP_PUSH": "Pushes a new key (`string` or `number`) onto the end of map, with value of `1`. Returns the updated `map` object.",
    "DOC_MAP_POP": "Returns the key (`string` or `int`) of the first element in the map, and removes that element from the map.",
    "DOC_MAP_SHUFFLE": "Randomly remaps values in a map, leaving the keys in their original order. Returns `null`.",
    "DOC_MAP_SUM": "Returns the total (`int`) of all numeric values in the map. This applies to `numbers` only and excludes strings, lists and maps within the map.",
    "DOC_MAP_HASINDEX": "Does map.key exist? The key may be a string or integer. Returns `1` (true) or `0` (false).",
    "DOC_MAP_INDEXOF": "Get the index (in maps, this will be the key) of a value. Optionally searches after begin (`any` key). Returns key (`string` or `int`) or `null` (key/value not found).",
    "DOC_MAP_INDEXES": "Returns a `list object` containing all the map keys.",
    "DOC_MAP_LEN": "Returns the length of the map (`int`).",
    "DOC_MAP_VALUES": "Returns a `list` containing all the values within the map.",
    "DOC_METALIB_OVERFLOW": "Exploits the indicated vulnerability through the `buffer overflow` method. The object returned can be of various types or even not return anything, so it is advisable to use the `typeof` method with the object returned. Depending on the result, it may be necessary to pass extra arguments so that the exploit runs correctly, for example in the case of a password change.",
    "DOC_METALIB_VERSION": "Print the version of the library.",
    "DOC_METALIB_LIB_NAME": "Print the name of the library.",
    "DOC_METAMAIL_FETCH": "Returns a `string` type `list` of the received emails, with a content preview. In case of error, it returns a `string`.",
    "DOC_METAMAIL_READ": "Read the full mail. The mail_ID argument can be obtained with `fetch`.",
    "DOC_METAMAIL_SEND": "Send a new mail to the indicated recipient. Returns `true` if the mail has been sent correctly, otherwise returns a `string` with the error.",
    "DOC_METAXPLOIT_LOAD": "Load the library in memory and return it as a `metalib` type if the process was successful.",
    "DOC_METAXPLOIT_NET_USE": "It connects to the specified address and establishes a null session to gain access to a library remotely. This type of attack is only available for services that work remotely. If no port is specified, it will connect directly to the router. If the process has been executed correctly, an object of type `net_session` will be returned.",
    "DOC_METAXPLOIT_RSHELL_CLIENT": "Launches a process on the victim's machine, which silently tries to continuously connect in the background to the specified address and port. For the reverse shell to run successfully, the `rshell` service must be installed and the portforward configured correctly on the machine where the server is waiting for the victim's connection.",
    "DOC_METAXPLOIT_RSHELL_SERVER": "This method returns a list of shell objects that have been reverse shell connected to this machine. In order to manage the connections received, the `rshell` service must be installed on the machine that receives the victims' connections.",
    "DOC_METAXPLOIT_SCAN": "Analyze the memory areas occupied by the library in search of vulnerabilities. Returns a `list` with the affected memory zones.",
    "DOC_METAXPLOIT_SCAN_ADDRESS": "It analyzes a specific memory address and shows the vulnerable parts that can be exploited.",
    "DOC_METAXPLOIT_SNIFFER": "The terminal listens to the network packets of any connection that passes through this device.  When any connection information is captured, it prints a `string` with the obtained data.  It can save the source code of the encode script if `saveEncSource` is `true`. Null is returned if the listen could not be started.",
    "DOC_NETSESSION_DUMP_LIB": "Returns the `metalib` associated with the remote service.  For example, connecting to a computer with the `ssh` service will return a `metalib` `lib`ssh`` object.  In the case of connecting to a router, it returns a `metalib` `kernel_router` object.",
    "DOC_PORT_PORT_NUMBER": "Returns an `int` with the configured port number.",
    "DOC_PORT_IS_CLOSED": "Returns `true` if this port is closed, `false` otherwise.",
    "DOC_PORT_GET_LAN_IP": "Returns a string with the local IP address of the computer pointed to by this port.",
    "DOC_ROUTER_DEVICE_PORTS": "Takes a LAN IP address and returns a `list` with open ports accessible in the network. If used from outside the network, it will return `null` on any IP that doesn't connect directly to the main router.",
    "DOC_ROUTER_DEVICES_LAN_IP": "Returns a `list` with any computer whose `gateway` is the current device with the ips of the routers and switches that it can reach with a ping.  Some of the returned addresses could be behind a firewall.",
    "DOC_ROUTER_BSSID_NAME": "Returns a `string` with the `BSSID` value of the router.",
    "DOC_ROUTER_ESSID_NAME": "Returns a `string` with the `ESSID` value of the router.",
    "DOC_ROUTER_LOCAL_IP": "Returns the LAN IP address (`string`) of the router.",
    "DOC_ROUTER_PUBLIC_IP": "Returns the public IP address (`string`) of the router.",
    "DOC_ROUTER_USED_PORTS": "Returns an array of ports that are being used in this router.",
    "DOC_ROUTER_PING_PORT": "Returns the port object that is behind the port number provided if exists, null otherwise.",
    "DOC_ROUTER_PORT_INFO": "Returns a string with the information of the port that has been provided. The port provided must not belong to another network than this router.",
    "DOC_SHELL_HOST_COMPUTER": "Returns the `computer` associated with the shell.",
    "DOC_SHELL_START_TERMINAL": "Launch an active terminal from the shell.",
    "DOC_SHELL_BUILD": "Compile the source code of the file that is in the provided path, and save the executable in the destination path. The name of the executable is the same as that of the source file without the extension.  The provided paths must be absolutes.",
    "DOC_SHELL_CONNECT_SERVICE": "Connect to a remote service. Returns a `shell` if the connection has been established correctly.",
    "DOC_SHELL_LAUNCH": "Launches the command in the provided path.",
    "DOC_SHELL_SCP": "Copy a file from one computer to the other through the network.",
    "DOC_STRING_REMOVE": "Remove the first occurrence of a substring from a string. Returns the string without the first occurrence of substr (`string`).",
    "DOC_STRING_HASINDEX": "Does the index (`int`) exist?. Returns `1` (true) or `0` (false).",
    "DOC_STRING_INDEXOF": "Get the index of the first substring (`string`) within string. Optionally searches after begin (`int` index). Returns index (`int`) or `null` (substring not found).",
    "DOC_STRING_LASTINDEXOF": "Get the index of the last substring (`substr`) within string. Takes a `string`. Returns index (`int`) or `null` (substring not found).",
    "DOC_STRING_SPLIT": "Takes a separator (`string`). Returns a `list object` of substrings (or `null` on error).",
    "DOC_STRING_REPLACE": "Takes two `string` values. Returns the string with any instances of substring old replaced with new.",
    "DOC_STRING_TRIM": "Returns the string stripped of any spacing at the beginning or end.",
    "DOC_STRING_INDEXES": "Returns a `list object` containing indexes of all characters in the string.",
    "DOC_STRING_CODE": "Returns the unicode code point (`int`) of the first character of the string.",
    "DOC_STRING_LEN": "Returns length of string (`int`).",
    "DOC_STRING_LOWER": "Returns str in lowercase (`string`).",
    "DOC_STRING_UPPER": "Returns str in uppercase (`string`).",
    "DOC_STRING_VAL": "Converts str to a number. Returns `number` if string represents a valid number, `0` if not.",
    "DOC_STRING_VALUES": "Returns a `list object` consisting of all the individual characters in str.",
    "DOC_STRING_TO_INT": "Converts str to an integer. Returns `int` if string represents a valid integer, or otherwise returns `string` str.",
    "DOC_COMPUTER": "Returns an object of type `Computer` that is the computer that is executing the script.",
    "DOC_GENERAL_PARENT_PATH": "Returns the path provided without the last element. It does not take into account if the path exists.",
    "DOC_GET_COMPUTER": "`Returns the computer of the local network whose IP matches the one provided.`.",
    "DOC_GET_COMPUTERS": "Returns an array of all the computers that are active and connected to the router in the local network.",
    "DOC_GENERAL_CURRENT_PATH": "It returns a `string` with the path in which the terminal is at the moment of launching the script.",
    "DOC_IS_FOLDER": "Returns `true` if the file is a folder, `false` otherwise.",
    "DOC_INJECT_LIB": "Injects the local library passed as a parameter to the victim's computer, if the library through which the null connection is being made has a vulnerability that allows it.  This is useful to be able to use `include_lib` from a library that does not physically exist on the victim's computer, such as metaxploit.so.  If the injection is done correctly, the terminal will be busy keeping the library in memory of the victim's computer.  To stop the process, press the key combination `Ctrl+C` on the terminal.",
    "DOC_SHELL_PUT": "Copy a file from one computer to the other through the network.",
    "DOC_COMPUTER_CONNECT_ETHERNET": "Set up a new IP address on the machine through the ethernet connection. Returns a `string` with the error message if the connection failed. In case of success, an empty `string` is returned.",
    "DOC_COMPUTER_NETWORK_GATEWAY": "Returns a string with the gateway configured on the computer.",
    "DOC_COMPUTER_ACTIVE_NET_CARD": "Returns a `string` with the keyword `WIFI` if the current device is connected to a router by WiFi, if it is connected by cable a `string` with the keyword `ETHERNET` is returned.",
    "DOC_SHELL_PING": "Returns `true` if the remote address could be reached, `false` otherwise. Firewalls do not block ping requests.",
    "DOC_ROUTER_KERNEL_VERSION": "Returns a string with the version of the `kernel_router.so` library.",
    "DOC_FIREWALL_OVERFLOW": "Due to a vulnerability in some versions of `kernel_router.so`, an attacker can bypass the firewall by sending a certain sequence of traffic patterns and disable the firewall rules.",
    "DOC_APTCLIENT_ADD_REPO": "Add the repository address in the `/etc/apt/sources.txt` file.",
    "DOC_APTCLIENT_INSTALL": "Install the program or library from a remote repository listed in `/etc/apt/sources.txt`. Unless a path is specified, the program installs in `/lib` if it is a library or in `/bin` otherwise.",
    "DOC_APTCLIENT_UPDATE": "Update the list of available packages after adding a new repository in `/etc/apt/sources.txt`, or if the remote repository has updated its information in `/server/conf/repod.conf`.",
    "DOC_APTCLIENT_SEARCH": "Search specifically for the package in any of the repositories listed in `/etc/apt/sources.txt`.",
    "DOC_APTCLIENT_SHOW": "Shows all packages available in the repository. The repository must be added in the `/etc/apt/sources.txt` file.",
    "DOC_APTCLIENT_CHECK_UPGRADE": "Check if there is a newer version of the file in the repository.",
    "DOC_METAMAIL_DELETE": "Delete the mail that corresponds with mail_ID. Returns `true` if it was removed successfully or a `string` with the error message.",
    "DOC_APTCLIENT_DEL_REPO": "Remove the repository address in the `/etc/apt/sources.txt` file."
}