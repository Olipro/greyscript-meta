{
    "get_ports": {
        "returns": ["list:port"]
    },
    "local_ip": {
        "example": [
            "print(host_computer.local_ip)",
            "print(get_router.local_ip)"
        ],
        "returns": ["string"]
    },
    "public_ip": {
        "example": [
            "print(host_computer.public_ip)",
            "print(get_router.public_ip)"
        ],
        "returns": ["string"]
    },
    "File": {
        "arguments": [{
            "label": "path",
            "type": "string"
        }],
        "example": [
            "comp = get_shell.host_computer",
            "myfile = comp.File(\"/path/to/file\")",
            "myfile.delete",
            "",
            "comp.File(\"/path/to/directory\").delete"
        ],
        "returns": ["file", "null"]
    },
    "create_folder": {
        "arguments": [{
            "label": "folder",
            "type": "string"
        }],
        "example": [
            "comp = get_shell.host_computer",
            "comp.create_folder(current_path, \"foldername\")"
        ],
        "returns": ["boolean", "null"]
    },
    "is_network_active": {
        "returns": ["boolean"]
    },
    "touch": {
        "arguments": [{
            "label": "path",
            "type": "string"
        }, {
            "label": "fileName",
            "type": "string"
        }],
        "example": [
            "comp = get_shell.host_computer",
            "comp.touch(\"/path/to/directory\", \"filename\")",
            "print(comp.File(\"/path/to/directory/filename\").name) // \"filename\""
        ],
        "returns": ["boolean", "string"]
    },
    "show_procs": {
        "example": [
            "print(\"Current user: \" + active_user + \"\\n\\nCurrent processes:\")",
            "print(get_shell.host_computer.show_procs)"
        ],
        "returns": ["list:string"]
    },
    "network_devices": {
        "example": [
            "print(get_shell.host_computer.network_devices)"
        ],
        "returns": ["list:string"]
    },
    "change_password": {
        "arguments": [{
            "label": "user",
            "type": "string"
        }, {
            "label": "pass",
            "type": "string"
        }],
        "returns": ["boolean", "string"]
    },
    "create_user": {
        "arguments": [{
            "label": "user",
            "type": "string"
        }, {
            "label": "pass",
            "type": "string"
        }],
        "returns": ["boolean", "string"]
    },
    "delete_user": {
        "arguments": [{
            "label": "user",
            "type": "string"
        }, {
            "label": "removeHome",
            "type": "boolean",
            "opt": true
        }],
        "returns": ["boolean", "string"]
    },
    "create_group": {
        "arguments": [{
            "label": "user",
            "type": "string"
        }, {
            "label": "group",
            "type": "string"
        }],
        "returns": ["boolean", "string"]
    },
    "delete_group": {
        "arguments": [{
            "label": "user",
            "type": "string"
        }, {
            "label": "group",
            "type": "string"
        }],
        "returns": ["boolean", "string"]
    },
    "groups": {
        "arguments": [{
            "label": "user",
            "type": "string"
        }],
        "returns": ["string"]
    },
    "close_program": {
        "arguments": [{
            "label": "pid",
            "type": "number"
        }],
        "returns": ["boolean", "string"]
    },
    "wifi_networks": {
        "arguments": [{
            "label": "interface",
            "type": "string"
        }],
        "example": [
            "networks = get_shell.host_computer.wifi_networks(\"eth0\")",
            "for net in networks",
            "  print(net.split(\" \")[0])",
            "end for"
        ],
        "returns": ["list:string"]
    },
    "connect_wifi": {
        "arguments": [{
            "label": "interface",
            "type": "string"
        }, {
            "label": "bssid",
            "type": "string"
        }, {
            "label": "essid",
            "type": "string"
        }, {
            "label": "pass",
            "type": "string"
        }],
        "returns": ["boolean", "string", "null"]
    },
    "connect_ethernet": {
        "arguments": [{
            "label": "interface",
            "type": "string"
        }, {
            "label": "localIp",
            "type": "string"
        }, {
            "label": "gateway",
            "type": "string"
        }],
        "returns": ["boolean", "string", "null"]
    },
    "network_gateway": {
        "returns": ["string"]
    },
    "active_net_card": {
        "returns": ["string"]
    }
}